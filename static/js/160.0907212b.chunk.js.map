{"version":3,"file":"static/js/160.0907212b.chunk.js","mappings":"iPACA,EAAuB,uBAAvB,EAAqD,uBAArD,EAAmF,uB,mBCuCnF,EAlCiB,WACf,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAcG,GAAd,WACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,gHAESC,EAAAA,EAAAA,IAAaJ,GAFtB,gBAENH,EAFM,EAENA,KACRC,EAAQD,GAHM,gDAKdE,EAAS,EAAD,IALM,yDAAH,qDAQfI,GACD,GAAE,CAACH,IAEJ,IAAMK,EAAQR,EAAKS,KAAI,YAAiD,IAA9CC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAC5CC,EAAM,yCAAqCD,GAE3CE,EAAMF,EAAeC,EADX,qCAEhB,OACE,2BACE,gBAAKC,IAAKA,EAAKC,IAAKJ,KACpB,cAAGK,UAAWC,EAAd,SAA2BN,KAC3B,eAAGK,UAAWC,EAAd,wBAAsCP,OAH/BD,EAMZ,IAED,OAAO,eAAIO,UAAWC,EAAf,SAA4BV,GACpC,C,oLClCOW,ECHG,gCDGMC,ECFP,mCDIGC,EAAS,mCAAG,sGACAC,IAAAA,IAAA,UAClBH,EADkB,oCACiBC,IAFjB,uBACfG,EADe,EACfA,KADe,kBAIhBA,EAAKC,SAJW,2CAAH,qDAcTC,EAAe,mCAAG,WAAMC,GAAN,yFACNJ,IAAAA,IAAA,UAAaH,EAAb,iBAA6BO,EAA7B,oBAA2CN,IADrC,uBACrBG,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfhB,EAAY,mCAAG,WAAMmB,GAAN,yFACHJ,IAAAA,IAAA,UAClBH,EADkB,iBACFO,EADE,4BACoBN,IAFjB,uBAClBG,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDAOZI,EAAe,mCAAG,WAAMD,GAAN,yFACNJ,IAAAA,IAAA,UAClBH,EADkB,iBACFO,EADE,4BACoBN,IAFd,uBACrBG,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,qD","sources":["webpack://react-homework-template/./src/pages/CastPage/castPage.module.css?5ee2","pages/CastPage/CastPage.jsx","shared/api/movieApi.js","shared/api/baseApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"castPage_list__OcaOG\",\"name\":\"castPage_name__2+Vuc\",\"text\":\"castPage_text__FUliF\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport style from './castPage.module.css';\nimport { getMovieCast } from 'shared/api/movieApi';\n\nconst CastPage = () => {\n  const [cast, setCast] = useState([]);\n  // eslint-disable-next-line no-unused-vars\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const { cast } = await getMovieCast(movieId);\n        setCast(cast);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  const items = cast.map(({ cast_id, character, name, profile_path }) => {\n    const imgSrc = `https://image.tmdb.org/t/p/w200${profile_path}`;\n    const imgPlug = 'http://via.placeholder.com/120x180';\n    const src = profile_path ? imgSrc : imgPlug;\n    return (\n      <li key={cast_id}>\n        <img src={src} alt={name} />\n        <p className={style.name}>{name}</p>\n        <p className={style.text}>character: {character}</p>\n      </li>\n    );\n  });\n\n  return <ul className={style.list}>{items}</ul>;\n};\n\nexport default CastPage;\n","import axios from 'axios';\n\nimport { data } from './baseApi';\n\nconst { BaseUrl, ApiKey } = data;\n\nexport const getTrends = async () => {\n  const { data } = await axios.get(\n    `${BaseUrl}trending/all/day?api_key=${ApiKey}`\n  );\n  return data.results;\n};\n\nexport const getSearchMovies = async (q, page = 1) => {\n  const { data } = await axios.get(\n    `${BaseUrl}search/movie?api_key=${ApiKey}&query=${q}&page=${page}`\n  );\n  return data;\n};\n\nexport const getMovieDedails = async id => {\n  const { data } = await axios.get(`${BaseUrl}movie/${id}?api_key=${ApiKey}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await axios.get(\n    `${BaseUrl}movie/${id}/credits?api_key=${ApiKey}`\n  );\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(\n    `${BaseUrl}movie/${id}/reviews?api_key=${ApiKey}`\n  );\n  return data;\n};\n","export const data = {\n  BaseUrl: 'https://api.themoviedb.org/3/',\n  ApiKey: 'eed4f1d8aea9e26327c4f8a358313952',\n};\n"],"names":["useState","cast","setCast","setError","movieId","useParams","useEffect","fetchCast","getMovieCast","items","map","cast_id","character","name","profile_path","imgSrc","src","alt","className","style","BaseUrl","ApiKey","getTrends","axios","data","results","getMovieDedails","id","getMovieReviews"],"sourceRoot":""}